<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hellomyheart.logistics.management.system.mapperold.IncomemonthlytempMapper">
  <resultMap id="BaseResultMap" type="cn.hellomyheart.logistics.management.system.entityold.Incomemonthlytemp">
    <!--@mbg.generated-->
    <!--@Table incomemonthlytemp-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="biz_fee" jdbcType="DOUBLE" property="bizFee" />
    <result column="biz_income" jdbcType="DOUBLE" property="bizIncome" />
    <result column="car_carriage" jdbcType="DOUBLE" property="carCarriage" />
    <result column="carriage_money" jdbcType="DOUBLE" property="carriageMoney" />
    <result column="convey_wage" jdbcType="DOUBLE" property="conveyWage" />
    <result column="finance_fee" jdbcType="DOUBLE" property="financeFee" />
    <result column="house_rent" jdbcType="DOUBLE" property="houseRent" />
    <result column="income" jdbcType="DOUBLE" property="income" />
    <result column="insurance_money" jdbcType="DOUBLE" property="insuranceMoney" />
    <result column="manage_fee" jdbcType="DOUBLE" property="manageFee" />
    <result column="month" jdbcType="VARCHAR" property="month" />
    <result column="office_fee" jdbcType="DOUBLE" property="officeFee" />
    <result column="other" jdbcType="DOUBLE" property="other" />
    <result column="payout" jdbcType="DOUBLE" property="payout" />
    <result column="phone_fee" jdbcType="DOUBLE" property="phoneFee" />
    <result column="profit" jdbcType="DOUBLE" property="profit" />
    <result column="unbiz_income" jdbcType="DOUBLE" property="unbizIncome" />
    <result column="wage" jdbcType="DOUBLE" property="wage" />
    <result column="water_elec_fee" jdbcType="DOUBLE" property="waterElecFee" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, biz_fee, biz_income, car_carriage, carriage_money, convey_wage, finance_fee,
    house_rent, income, insurance_money, manage_fee, `month`, office_fee, other, payout,
    phone_fee, profit, unbiz_income, wage, water_elec_fee
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from incomemonthlytemp
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from incomemonthlytemp
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.hellomyheart.logistics.management.system.entityold.Incomemonthlytemp" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into incomemonthlytemp (biz_fee, biz_income, car_carriage,
      carriage_money, convey_wage, finance_fee,
      house_rent, income, insurance_money,
      manage_fee, `month`, office_fee,
      other, payout, phone_fee,
      profit, unbiz_income, wage,
      water_elec_fee)
    values (#{bizFee,jdbcType=DOUBLE}, #{bizIncome,jdbcType=DOUBLE}, #{carCarriage,jdbcType=DOUBLE},
      #{carriageMoney,jdbcType=DOUBLE}, #{conveyWage,jdbcType=DOUBLE}, #{financeFee,jdbcType=DOUBLE},
      #{houseRent,jdbcType=DOUBLE}, #{income,jdbcType=DOUBLE}, #{insuranceMoney,jdbcType=DOUBLE},
      #{manageFee,jdbcType=DOUBLE}, #{month,jdbcType=VARCHAR}, #{officeFee,jdbcType=DOUBLE},
      #{other,jdbcType=DOUBLE}, #{payout,jdbcType=DOUBLE}, #{phoneFee,jdbcType=DOUBLE},
      #{profit,jdbcType=DOUBLE}, #{unbizIncome,jdbcType=DOUBLE}, #{wage,jdbcType=DOUBLE},
      #{waterElecFee,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.hellomyheart.logistics.management.system.entityold.Incomemonthlytemp" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into incomemonthlytemp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bizFee != null">
        biz_fee,
      </if>
      <if test="bizIncome != null">
        biz_income,
      </if>
      <if test="carCarriage != null">
        car_carriage,
      </if>
      <if test="carriageMoney != null">
        carriage_money,
      </if>
      <if test="conveyWage != null">
        convey_wage,
      </if>
      <if test="financeFee != null">
        finance_fee,
      </if>
      <if test="houseRent != null">
        house_rent,
      </if>
      <if test="income != null">
        income,
      </if>
      <if test="insuranceMoney != null">
        insurance_money,
      </if>
      <if test="manageFee != null">
        manage_fee,
      </if>
      <if test="month != null">
        `month`,
      </if>
      <if test="officeFee != null">
        office_fee,
      </if>
      <if test="other != null">
        other,
      </if>
      <if test="payout != null">
        payout,
      </if>
      <if test="phoneFee != null">
        phone_fee,
      </if>
      <if test="profit != null">
        profit,
      </if>
      <if test="unbizIncome != null">
        unbiz_income,
      </if>
      <if test="wage != null">
        wage,
      </if>
      <if test="waterElecFee != null">
        water_elec_fee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bizFee != null">
        #{bizFee,jdbcType=DOUBLE},
      </if>
      <if test="bizIncome != null">
        #{bizIncome,jdbcType=DOUBLE},
      </if>
      <if test="carCarriage != null">
        #{carCarriage,jdbcType=DOUBLE},
      </if>
      <if test="carriageMoney != null">
        #{carriageMoney,jdbcType=DOUBLE},
      </if>
      <if test="conveyWage != null">
        #{conveyWage,jdbcType=DOUBLE},
      </if>
      <if test="financeFee != null">
        #{financeFee,jdbcType=DOUBLE},
      </if>
      <if test="houseRent != null">
        #{houseRent,jdbcType=DOUBLE},
      </if>
      <if test="income != null">
        #{income,jdbcType=DOUBLE},
      </if>
      <if test="insuranceMoney != null">
        #{insuranceMoney,jdbcType=DOUBLE},
      </if>
      <if test="manageFee != null">
        #{manageFee,jdbcType=DOUBLE},
      </if>
      <if test="month != null">
        #{month,jdbcType=VARCHAR},
      </if>
      <if test="officeFee != null">
        #{officeFee,jdbcType=DOUBLE},
      </if>
      <if test="other != null">
        #{other,jdbcType=DOUBLE},
      </if>
      <if test="payout != null">
        #{payout,jdbcType=DOUBLE},
      </if>
      <if test="phoneFee != null">
        #{phoneFee,jdbcType=DOUBLE},
      </if>
      <if test="profit != null">
        #{profit,jdbcType=DOUBLE},
      </if>
      <if test="unbizIncome != null">
        #{unbizIncome,jdbcType=DOUBLE},
      </if>
      <if test="wage != null">
        #{wage,jdbcType=DOUBLE},
      </if>
      <if test="waterElecFee != null">
        #{waterElecFee,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hellomyheart.logistics.management.system.entityold.Incomemonthlytemp">
    <!--@mbg.generated-->
    update incomemonthlytemp
    <set>
      <if test="bizFee != null">
        biz_fee = #{bizFee,jdbcType=DOUBLE},
      </if>
      <if test="bizIncome != null">
        biz_income = #{bizIncome,jdbcType=DOUBLE},
      </if>
      <if test="carCarriage != null">
        car_carriage = #{carCarriage,jdbcType=DOUBLE},
      </if>
      <if test="carriageMoney != null">
        carriage_money = #{carriageMoney,jdbcType=DOUBLE},
      </if>
      <if test="conveyWage != null">
        convey_wage = #{conveyWage,jdbcType=DOUBLE},
      </if>
      <if test="financeFee != null">
        finance_fee = #{financeFee,jdbcType=DOUBLE},
      </if>
      <if test="houseRent != null">
        house_rent = #{houseRent,jdbcType=DOUBLE},
      </if>
      <if test="income != null">
        income = #{income,jdbcType=DOUBLE},
      </if>
      <if test="insuranceMoney != null">
        insurance_money = #{insuranceMoney,jdbcType=DOUBLE},
      </if>
      <if test="manageFee != null">
        manage_fee = #{manageFee,jdbcType=DOUBLE},
      </if>
      <if test="month != null">
        `month` = #{month,jdbcType=VARCHAR},
      </if>
      <if test="officeFee != null">
        office_fee = #{officeFee,jdbcType=DOUBLE},
      </if>
      <if test="other != null">
        other = #{other,jdbcType=DOUBLE},
      </if>
      <if test="payout != null">
        payout = #{payout,jdbcType=DOUBLE},
      </if>
      <if test="phoneFee != null">
        phone_fee = #{phoneFee,jdbcType=DOUBLE},
      </if>
      <if test="profit != null">
        profit = #{profit,jdbcType=DOUBLE},
      </if>
      <if test="unbizIncome != null">
        unbiz_income = #{unbizIncome,jdbcType=DOUBLE},
      </if>
      <if test="wage != null">
        wage = #{wage,jdbcType=DOUBLE},
      </if>
      <if test="waterElecFee != null">
        water_elec_fee = #{waterElecFee,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hellomyheart.logistics.management.system.entityold.Incomemonthlytemp">
    <!--@mbg.generated-->
    update incomemonthlytemp
    set biz_fee = #{bizFee,jdbcType=DOUBLE},
      biz_income = #{bizIncome,jdbcType=DOUBLE},
      car_carriage = #{carCarriage,jdbcType=DOUBLE},
      carriage_money = #{carriageMoney,jdbcType=DOUBLE},
      convey_wage = #{conveyWage,jdbcType=DOUBLE},
      finance_fee = #{financeFee,jdbcType=DOUBLE},
      house_rent = #{houseRent,jdbcType=DOUBLE},
      income = #{income,jdbcType=DOUBLE},
      insurance_money = #{insuranceMoney,jdbcType=DOUBLE},
      manage_fee = #{manageFee,jdbcType=DOUBLE},
      `month` = #{month,jdbcType=VARCHAR},
      office_fee = #{officeFee,jdbcType=DOUBLE},
      other = #{other,jdbcType=DOUBLE},
      payout = #{payout,jdbcType=DOUBLE},
      phone_fee = #{phoneFee,jdbcType=DOUBLE},
      profit = #{profit,jdbcType=DOUBLE},
      unbiz_income = #{unbizIncome,jdbcType=DOUBLE},
      wage = #{wage,jdbcType=DOUBLE},
      water_elec_fee = #{waterElecFee,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
