<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hellomyheart.logistics.management.system.mapperold.TPermissionMapper">
    <resultMap id="BaseResultMap" type="cn.hellomyheart.logistics.management.system.entityold.TPermission">
        <!--@mbg.generated-->
        <!--@Table t_permission-->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, code, description, url
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from t_permission
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--@mbg.generated-->
        delete from t_permission
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="cn.hellomyheart.logistics.management.system.entityold.TPermission">
        <!--@mbg.generated-->
        insert into t_permission (id, code, description,
        url)
        values (#{id,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
        #{url,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="cn.hellomyheart.logistics.management.system.entityold.TPermission">
        <!--@mbg.generated-->
        insert into t_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="url != null">
                url,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="cn.hellomyheart.logistics.management.system.entityold.TPermission">
        <!--@mbg.generated-->
        update t_permission
        <set>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.hellomyheart.logistics.management.system.entityold.TPermission">
        <!--@mbg.generated-->
        update t_permission
        set code = #{code,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        url = #{url,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <select id="selectPermissionsByUserId" resultMap="BaseResultMap" parameterType="string">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from t_permission
        where id in (
            select permission_id FROM t_role_permission WHERE role_id in(
                SELECT role_id FROM t_user_role WHERE user_id =#{userId,jdbcType=VARCHAR}
            )
        )
    </select>
</mapper>
